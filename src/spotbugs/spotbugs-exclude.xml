<!--
  ~ Copyright 2019 jsonwebtoken.io
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<FindBugsFilter>

    <!-- TODO: remove deprecated from below for 1.0 -->

    <!-- breaking change, TODO: fix in 1.0 -->
    <Match>
        <Class name="io.jsonwebtoken.lang.Classes" />
        <Method name="invokeStatic" />
        <Bug pattern="REC_CATCH_EXCEPTION" />
    </Match>

    <Match>
        <!-- ignore util methods pulled in from Spring -->
        <Class name="io.jsonwebtoken.lang.Strings"/>
    </Match>

    <Match>
        <!-- toString _could_ return 'null' here, though unlikely -->
        <!-- String str = obj.toString(); -->
        <!-- return (str != null ? str : EMPTY_STRING); -->
        <Class name="io.jsonwebtoken.lang.Objects"/>
        <Method name="nullSafeToString"/>
    </Match>

    <Match>
        <!-- existing functionality, fixing would be a breaking change -->
        <Class name="io.jsonwebtoken.lang.Arrays"/>
        <Bug pattern="PZLA_PREFER_ZERO_LENGTH_ARRAYS" />
    </Match>

    <Match>
        <!-- deprecated super class, this helps retain backward compat -->
        <Class name="io.jsonwebtoken.security.SignatureException"/>
        <Bug pattern="NM_SAME_SIMPLE_NAME_AS_SUPERCLASS" />
    </Match>

    <Match>
        <!-- ignoring, setting property with known null value -->
        <Class name="io.jsonwebtoken.impl.DefaultJwtBuilder"/>
        <Bug pattern="NP_LOAD_OF_KNOWN_NULL_VALUE" />
    </Match>

    <Match>
        <!-- deprecated, will be removed in 1.0 -->
        <Class name="io.jsonwebtoken.impl.DefaultTextCodecFactory"/>
        <Bug pattern="DM_CONVERT_CASE" />
    </Match>

    <Match>
        <!-- intentional, default value is provided before switch block -->
        <Class name="io.jsonwebtoken.impl.crypto.RsaProvider" />
        <Method name="generateKeyPair" />
        <Bug pattern="SF_SWITCH_NO_DEFAULT" />
    </Match>

    <Match>
        <!-- 'algorithm' is verified at the same time as 'key' -->
        <Class name="io.jsonwebtoken.impl.DefaultJwtBuilder" />
        <Method name="compact" />
        <Bug pattern="UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" />
    </Match>

    <Match>
        <!-- deprecated method, will be removed in 1.0 -->
        <Class name="io.jsonwebtoken.impl.DefaultJwtBuilder" />
        <Method name="toJson" />
        <Bug pattern="UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" />
    </Match>

    <Match>
        <!-- can use lambdas once we move to 1.8+ -->
        <Class name="io.jsonwebtoken.impl.DefaultJwtParser" />
        <Bug pattern="SIC_INNER_SHOULD_BE_STATIC_ANON" />
    </Match>

    <!-- breaking change, TODO: fix in 1.0 -->
    <Match>
        <Class name="io.jsonwebtoken.impl.crypto.EllipticCurveProvider" />
        <Method name="generateKeyPair" />
        <Bug pattern="REC_CATCH_EXCEPTION" />
    </Match>

    <!-- breaking change, TODO: fix in 1.0 -->
    <Match>
        <Class name="io.jsonwebtoken.impl.crypto.EllipticCurveSignatureValidator" />
        <Method name="isValid" />
        <Bug pattern="REC_CATCH_EXCEPTION" />
    </Match>

</FindBugsFilter>